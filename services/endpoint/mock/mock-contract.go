// Code generated by MockGen. DO NOT EDIT.
// Source: ../contract.go

// Package mock_endpoint is a generated GoMock package.
package mock_endpoint

import (
	endpoint "github.com/go-kit/kit/endpoint"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockEndpointCreatorContract is a mock of EndpointCreatorContract interface
type MockEndpointCreatorContract struct {
	ctrl     *gomock.Controller
	recorder *MockEndpointCreatorContractMockRecorder
}

// MockEndpointCreatorContractMockRecorder is the mock recorder for MockEndpointCreatorContract
type MockEndpointCreatorContractMockRecorder struct {
	mock *MockEndpointCreatorContract
}

// NewMockEndpointCreatorContract creates a new mock instance
func NewMockEndpointCreatorContract(ctrl *gomock.Controller) *MockEndpointCreatorContract {
	mock := &MockEndpointCreatorContract{ctrl: ctrl}
	mock.recorder = &MockEndpointCreatorContractMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockEndpointCreatorContract) EXPECT() *MockEndpointCreatorContractMockRecorder {
	return m.recorder
}

// CreateUserEndpoint mocks base method
func (m *MockEndpointCreatorContract) CreateUserEndpoint() endpoint.Endpoint {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateUserEndpoint")
	ret0, _ := ret[0].(endpoint.Endpoint)
	return ret0
}

// CreateUserEndpoint indicates an expected call of CreateUserEndpoint
func (mr *MockEndpointCreatorContractMockRecorder) CreateUserEndpoint() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateUserEndpoint", reflect.TypeOf((*MockEndpointCreatorContract)(nil).CreateUserEndpoint))
}

// ReadUserEndpoint mocks base method
func (m *MockEndpointCreatorContract) ReadUserEndpoint() endpoint.Endpoint {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ReadUserEndpoint")
	ret0, _ := ret[0].(endpoint.Endpoint)
	return ret0
}

// ReadUserEndpoint indicates an expected call of ReadUserEndpoint
func (mr *MockEndpointCreatorContractMockRecorder) ReadUserEndpoint() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ReadUserEndpoint", reflect.TypeOf((*MockEndpointCreatorContract)(nil).ReadUserEndpoint))
}

// UpdateUserEndpoint mocks base method
func (m *MockEndpointCreatorContract) UpdateUserEndpoint() endpoint.Endpoint {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateUserEndpoint")
	ret0, _ := ret[0].(endpoint.Endpoint)
	return ret0
}

// UpdateUserEndpoint indicates an expected call of UpdateUserEndpoint
func (mr *MockEndpointCreatorContractMockRecorder) UpdateUserEndpoint() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateUserEndpoint", reflect.TypeOf((*MockEndpointCreatorContract)(nil).UpdateUserEndpoint))
}

// DeleteUserEndpoint mocks base method
func (m *MockEndpointCreatorContract) DeleteUserEndpoint() endpoint.Endpoint {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteUserEndpoint")
	ret0, _ := ret[0].(endpoint.Endpoint)
	return ret0
}

// DeleteUserEndpoint indicates an expected call of DeleteUserEndpoint
func (mr *MockEndpointCreatorContractMockRecorder) DeleteUserEndpoint() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteUserEndpoint", reflect.TypeOf((*MockEndpointCreatorContract)(nil).DeleteUserEndpoint))
}
