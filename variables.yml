parameters:
  - name: devHelmOverrideValuesIndividuals
    type: object
    default:
      - "image.pullPolicy=Always,pod.database.connection_string="
      - $(MONGODB_CONNECTION_STRING_DEV)
      - ",pod.idp.jwksURL="
      - $(JWKS_URL)

  - name: testHelmOverrideValuesIndividuals
    type: object
    default:
      - "image.pullPolicy=Always,pod.database.connection_string="
      - $(MONGODB_CONNECTION_STRING_TEST)
      - ",pod.idp.jwksURL="
      - $(JWKS_URL)

  - name: prodHelmOverrideValuesIndividuals
    type: object
    default:
      - "image.pullPolicy=Always,pod.database.connection_string="
      - $(MONGODB_CONNECTION_STRING_PROD)
      - ",pod.idp.jwksURL="
      - $(JWKS_URL)

variables:
  - name: artifactVersion
    ${{ if eq(variables['Build.SourceBranch'], 'refs/heads/main') }}:
      value: latest
    ${{ if not(eq(variables['Build.SourceBranch'], 'refs/heads/main')) }}:
      value: $(GitVersion.SemVer)

  - name: linuxVmImage
    value: "ubuntu-20.04"

  - name: contractScriptFilePath
    value: "$(system.defaultWorkingDirectory)/scripts/compile-grpc.sh"

  - name: contractScriptworkingDirectory
    value: "$(system.defaultWorkingDirectory)/scripts"

  - name: dockerContainerRegistry
    value: "Decentralized Cloud Docker Hub"

  - name: dockerRepositoryName
    value: "decentralizedcloud/user"

  - name: dockerBuildFilePath
    value: "$(system.defaultWorkingDirectory)/docker/Dockerfile.build"

  - name: dockerBuildContext
    value: "$(system.defaultWorkingDirectory)"

  - name: testDockerComposeFilePath
    value: "$(system.defaultWorkingDirectory)/docker/docker-compose-test.yml"

  - name: coverallsServiceName
    value: $(COVERALLS_SERVICE_NAME)

  - name: coverallsRepoToken
    value: $(COVERALLS_REPO_TOKEN)

  - name: helmVersion
    value: "3.5.3"

  - name: helmChartsDirectoryPath
    value: "$(system.defaultWorkingDirectory)/helm-charts"

  - name: helmChartsOutputDirectoryPath
    value: "$(system.defaultWorkingDirectory)/chart-output"

  - name: helmArtifactName
    value: "helm"

  - name: shouldPublishHelmChart
    ? ${{ if or(eq(variables['Build.SourceBranch'], 'refs/heads/main'), startsWith(variables['Build.SourceBranch'], 'refs/tags/v')) }}
    : value: true
    ? ${{ if not(or(eq(variables['Build.SourceBranch'], 'refs/heads/main'), startsWith(variables['Build.SourceBranch'], 'refs/tags/v'))) }}
    : value: false

  - name: buildAndPushHelmChartDockerFilePath
    value: "$(system.defaultWorkingDirectory)/docker/Dockerfile.buildAndPushHelmChart"

  - name: buildAndPushHelmChartDockerBuildContext
    value: "$(system.defaultWorkingDirectory)"

  - name: githubAccessCredentials
    value: $(GITHUB_ACCESS_CREDENTIAL)

  - name: kubernetesServiceConnection
    value: $(KUBERNETES_SERVICE_CONNECTION)

  - name: devNamespace
    value: "dev"

  - name: testNamespace
    value: "test"

  - name: prodNamespace
    value: "prod"

  - name: chartPath
    value: "$(System.DefaultWorkingDirectory)/helm/user-0.1.1.tgz"

  - name: releaseName
    value: "user"

  - name: devHelmOverrideValues
    value: ${{ join('', parameters.devHelmOverrideValuesIndividuals) }}

  - name: testHelmOverrideValues
    value: ${{ join('', parameters.testHelmOverrideValuesIndividuals) }}

  - name: prodHelmOverrideValues
    value: ${{ join('', parameters.prodHelmOverrideValuesIndividuals) }}
